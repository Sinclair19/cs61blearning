- BucketsSpeedtest 

This program inserts random Strings of length L
Into different types of maps as <String, Integer> pairs.

What would you like L to be?: 10

Enter # strings to insert into each map: 10000
class hashmap.MyHashMapALBuckets: 0.02 sec
class hashmap.MyHashMapLLBuckets: 0.02 sec
class hashmap.MyHashMapTSBuckets: 0.03 sec
class hashmap.MyHashMapHSBuckets: 0.02 sec
class hashmap.MyHashMapPQBuckets: 0.02 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into each map: 20000
class hashmap.MyHashMapALBuckets: 0.02 sec
class hashmap.MyHashMapLLBuckets: 0.02 sec
class hashmap.MyHashMapTSBuckets: 0.03 sec
class hashmap.MyHashMapHSBuckets: 0.03 sec
class hashmap.MyHashMapPQBuckets: 0.01 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into each map: 100000
class hashmap.MyHashMapALBuckets: 0.14 sec
class hashmap.MyHashMapLLBuckets: 0.15 sec
class hashmap.MyHashMapTSBuckets: 0.18 sec
class hashmap.MyHashMapHSBuckets: 0.22 sec
class hashmap.MyHashMapPQBuckets: 0.21 sec


- InsertInOrderSpeedTest

This program inserts lexicographically increasing Stringsinto Maps as <String, Integer> pairs.

Enter # strings to insert into hashmap.ULLMap: 10000
class hashmap.ULLMap: 0.27 sec

Enter # strings to insert into hashmap.MyHashMap: 10000
class hashmap.MyHashMap: 0.02 sec

Enter # strings to insert into Java's HashMap: 10000
Java's Built-in HashMap: 0.01 sec

Would you like to try more timed-tests? (y/n): y

Enter # strings to insert into hashmap.ULLMap: 50000
--Stack Overflow -- couldn't add 50000 strings.

Enter # strings to insert into hashmap.MyHashMap: 50000
class hashmap.MyHashMap: 0.06 sec

Enter # strings to insert into Java's HashMap: 50000
Java's Built-in HashMap: 0.03 sec

Would you like to try more timed-tests? (y/n): y

Enter # strings to insert into hashmap.ULLMap: 100000
--Stack Overflow -- couldn't add 100000 strings.

Enter # strings to insert into hashmap.MyHashMap: 100000
class hashmap.MyHashMap: 0.11 sec

Enter # strings to insert into Java's HashMap: 100000
Java's Built-in HashMap: 0.14 sec

Would you like to try more timed-tests? (y/n): y

Enter # strings to insert into hashmap.ULLMap: 200000
--Stack Overflow -- couldn't add 200000 strings.

Enter # strings to insert into hashmap.MyHashMap: 200000
class hashmap.MyHashMap: 0.13 sec

Enter # strings to insert into Java's HashMap: 200000
Java's Built-in HashMap: 0.12 sec


- InsertRandomSpeedTest

This program inserts random Strings of length L
Into different types of maps as <String, Integer> pairs.

What would you like L to be?: 100

Enter # strings to insert into hashmap.ULLMap: 10000
class hashmap.ULLMap: 0.59 sec

Enter # strings to insert into your hashmap.MyHashMap: 10000
class hashmap.MyHashMap: 0.03 sec

Enter # strings to insert into Java's HashMap: 10000
Java's Built-in HashMap: 0.01 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into hashmap.ULLMap: 50000
--Stack Overflow -- couldn't add 50000 strings of length 100.

Enter # strings to insert into your hashmap.MyHashMap: 50000
class hashmap.MyHashMap: 0.09 sec

Enter # strings to insert into Java's HashMap: 50000
Java's Built-in HashMap: 0.05 sec

Would you like to try more timed-tests? (y/n)y

Enter # strings to insert into hashmap.ULLMap: 100000
--Stack Overflow -- couldn't add 100000 strings of length 100.

Enter # strings to insert into your hashmap.MyHashMap: 100000
class hashmap.MyHashMap: 0.18 sec

Enter # strings to insert into Java's HashMap: 100000
Java's Built-in HashMap: 0.10 sec
